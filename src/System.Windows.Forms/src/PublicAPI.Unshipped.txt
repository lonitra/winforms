System.Windows.Forms.AxHost.State.Dispose() -> void
System.Windows.Forms.Control.DarkMode.get -> System.Windows.Forms.DarkMode
System.Windows.Forms.Control.DarkMode.set -> void
System.Windows.Forms.DarkMode
System.Windows.Forms.DarkMode.Disabled = 3 -> System.Windows.Forms.DarkMode
System.Windows.Forms.DarkMode.Enabled = 2 -> System.Windows.Forms.DarkMode
System.Windows.Forms.DarkMode.Inherits = 1 -> System.Windows.Forms.DarkMode
System.Windows.Forms.DarkMode.NotSupported = 0 -> System.Windows.Forms.DarkMode
System.Windows.Forms.PrintPreviewControl.TabStop.get -> bool
System.Windows.Forms.PrintPreviewControl.TabStop.set -> void
System.Windows.Forms.PrintPreviewControl.TabStopChanged -> System.EventHandler?
*REMOVED*override System.Windows.Forms.ToolStripButton.CanSelect.get -> bool
override System.Windows.Forms.MaskedTextBox.CreateAccessibilityInstance() -> System.Windows.Forms.AccessibleObject!
override System.Windows.Forms.MaskedTextBox.OnGotFocus(System.EventArgs! e) -> void
override System.Windows.Forms.MaskedTextBox.OnMouseDown(System.Windows.Forms.MouseEventArgs! e) -> void
override System.Windows.Forms.TextBox.CreateAccessibilityInstance() -> System.Windows.Forms.AccessibleObject!
static System.Windows.Forms.Application.DefaultDarkMode.get -> System.Windows.Forms.DarkMode
static System.Windows.Forms.Application.EnvironmentDarkMode.get -> System.Windows.Forms.DarkMode
static System.Windows.Forms.Application.SetDefaultDarkMode(System.Windows.Forms.DarkMode darkMode) -> bool
virtual System.Windows.Forms.AxHost.State.Dispose(bool disposing) -> void
*REMOVED*override System.Windows.Forms.DomainUpDown.CreateAccessibilityInstance() -> System.Windows.Forms.AccessibleObject!
virtual System.Windows.Forms.Control.DarkModeSupported.get -> bool
virtual System.Windows.Forms.Control.DefaultDarkMode.get -> System.Windows.Forms.DarkMode
virtual System.Windows.Forms.Control.IsDarkModeEnabled.get -> bool
virtual System.Windows.Forms.Control.SetDarkModeCore(System.Windows.Forms.DarkMode darkModeSetting) -> bool
